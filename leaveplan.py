# -*- coding: utf-8 -*-
"""Untitled19.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1BwdH4uIKjF4K5hfH_e0j_nRgnNKwSezp
"""

import streamlit as st
import pandas as pd
from datetime import date
from pymongo import MongoClient
from streamlit_calendar import calendar
from collections import defaultdict


# Load MongoDB connection details securely from .streamlit/secrets.toml
MONGO_URI = st.secrets["MONGO_URI"]  # Change to your MongoDB URI


# Connect to MongoDB
client = MongoClient(MONGO_URI)
db = client["mongo_db"]
collection = db["leave_plans"]

def clear_form():
    st.session_state.name_input = ""
    st.session_state.start_date_input = pd.Timestamp.today()
    st.session_state.end_date_input = pd.Timestamp.today()
    st.session_state.leave_type_input = "CL"
    st.session_state.reason_input = ""



st.title("Team Leave Planning Tool (MongoDB + Calendar)")

with st.form("Add Leave Plan"):
    name = st.text_input("Your Name", key = "name_input")
    start_date = st.date_input("Leave Start Date", min_value=date.today(), key="start_date_input")
    end_date = st.date_input("Leave End Date", min_value=start_date, key="end_date_input")
    leave_type = st.selectbox("Type of Leave", ["CL", "EL", "PL", "ML","Other(Mention in Reason)"], key="leave_type_input")
    reason = st.text_area("Reason / Notes", key="reason_input")
    submit = st.form_submit_button("Submit")

    if submit and name:
        collection.insert_one({
            "name": name,
            "start_date": str(start_date),
            "end_date": str(end_date),
            "type": leave_type,
            "reason": reason
        })
        st.success("Leave plan added!")


# Fetch all leave plans
leave_plans = list(collection.find({}))
if leave_plans:
    df = pd.DataFrame(leave_plans)
    df = df.drop(columns=["_id"]) if "_id" in df.columns else df
    st.subheader("All Planned Leaves")
    st.dataframe(df)
    leave_by_date = defaultdict(list)
    for _, row in df.iterrows():
        start = pd.to_datetime(row["start_date"])
        end = pd.to_datetime(row["end_date"])
        for single_date in pd.date_range(start=start, end=end):
            leave_by_date[single_date.strftime("%Y-%m-%d")].append((row["name"], row["reason"]))



    # Format for calendar
    calendar_events = [
        {
            "title": f"{len(names)} people on leave",
            "start": date,
            "end": date,
            "color": "red",
        }
        for date, names in leave_by_date.items()
    ]

    cal_options = {
        "initialView": "dayGridMonth",
        "editable": False,
    }
    calendar(events=calendar_events, options=cal_options, key="leave_calendar")
    selected_date = st.date_input("Select a date to see who is on leave")
    selected_date_str = selected_date.strftime("%Y-%m-%d")
    if selected_date_str in leave_by_date:
        st.write(f"People on leave on {selected_date_str}:")
        for name, reason in leave_by_date[selected_date_str]:
            st.write(f"- {name}:{reason}")
    else:
        st.write(f"No one is on leave on {selected_date_str}.")
else:
    st.info("No leave plans submitted yet.")
